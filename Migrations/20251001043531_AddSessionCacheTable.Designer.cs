// <auto-generated />
using System;
using EbayChat.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EbayChat.Migrations
{
    [DbContext(typeof(CloneEbayDbContext))]
    [Migration("20251001043531_AddSessionCacheTable")]
    partial class AddSessionCacheTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EbayChat.Entities.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("city")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("fullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("isDefault")
                        .HasColumnType("bit");

                    b.Property<string>("phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("state")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("street")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK__Address__3213E83F0BFE9CC3");

                    b.HasIndex("userId");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.Bid", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("bidTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("bidderId")
                        .HasColumnType("int");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK__Bid__3213E83FB1D09E86");

                    b.HasIndex("bidderId");

                    b.HasIndex("productId");

                    b.ToTable("Bid", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id")
                        .HasName("PK__Category__3213E83F566C1706");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.Coupon", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("discountPercent")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime?>("endDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("maxUsage")
                        .HasColumnType("int");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("startDate")
                        .HasColumnType("datetime");

                    b.HasKey("id")
                        .HasName("PK__Coupon__3213E83F8EF96499");

                    b.HasIndex("productId");

                    b.ToTable("Coupon", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.Dispute", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("orderId")
                        .HasColumnType("int");

                    b.Property<int?>("raisedBy")
                        .HasColumnType("int");

                    b.Property<string>("resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id")
                        .HasName("PK__Dispute__3213E83FC58B6DA0");

                    b.HasIndex("orderId");

                    b.HasIndex("raisedBy");

                    b.ToTable("Dispute", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.Feedback", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal?>("averageRating")
                        .HasColumnType("decimal(3, 2)");

                    b.Property<decimal?>("positiveRate")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("sellerId")
                        .HasColumnType("int");

                    b.Property<int?>("totalReviews")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK__Feedback__3213E83F1424D05B");

                    b.HasIndex("sellerId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.Inventory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("lastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK__Inventor__3213E83FB80489E7");

                    b.HasIndex("productId");

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("receiverId")
                        .HasColumnType("int");

                    b.Property<int?>("senderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("timestamp")
                        .HasColumnType("datetime");

                    b.HasKey("id")
                        .HasName("PK__Message__3213E83F5B2DD92A");

                    b.HasIndex("receiverId");

                    b.HasIndex("senderId");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.OrderItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("orderId")
                        .HasColumnType("int");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("unitPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("id")
                        .HasName("PK__OrderIte__3213E83F1E45CBEE");

                    b.HasIndex("orderId");

                    b.HasIndex("productId");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.OrderTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("addressId")
                        .HasColumnType("int");

                    b.Property<int?>("buyerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("orderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("totalPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("id")
                        .HasName("PK__OrderTab__3213E83FBDB3130F");

                    b.HasIndex("addressId");

                    b.HasIndex("buyerId");

                    b.ToTable("OrderTable", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.Payment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("method")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("orderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("paidAt")
                        .HasColumnType("datetime");

                    b.Property<string>("status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK__Payment__3213E83F63E77656");

                    b.HasIndex("orderId");

                    b.HasIndex("userId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("auctionEndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isAuction")
                        .HasColumnType("bit");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("sellerId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id")
                        .HasName("PK__Product__3213E83FDAA46857");

                    b.HasIndex("categoryId");

                    b.HasIndex("sellerId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.ReturnRequest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("orderId")
                        .HasColumnType("int");

                    b.Property<string>("reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK__ReturnRe__3213E83FA5267CEB");

                    b.HasIndex("orderId");

                    b.HasIndex("userId");

                    b.ToTable("ReturnRequest", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.Review", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.Property<int?>("rating")
                        .HasColumnType("int");

                    b.Property<int?>("reviewerId")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK__Review__3213E83F3AD46D69");

                    b.HasIndex("productId");

                    b.HasIndex("reviewerId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.ShippingInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("carrier")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("estimatedArrival")
                        .HasColumnType("datetime");

                    b.Property<int?>("orderId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("trackingNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id")
                        .HasName("PK__Shipping__3213E83F8C1E50F0");

                    b.HasIndex("orderId");

                    b.ToTable("ShippingInfo", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.Store", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("bannerImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sellerId")
                        .HasColumnType("int");

                    b.Property<string>("storeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id")
                        .HasName("PK__Store__3213E83FB217309E");

                    b.HasIndex("sellerId");

                    b.ToTable("Store", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("avatarURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id")
                        .HasName("PK__User__3213E83FAD4831B7");

                    b.HasIndex(new[] { "email" }, "UQ__User__AB6E61643EB4B165")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("EbayChat.Entities.Address", b =>
                {
                    b.HasOne("EbayChat.Entities.User", "user")
                        .WithMany("Addresses")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK__Address__userId__3A81B327");

                    b.Navigation("user");
                });

            modelBuilder.Entity("EbayChat.Entities.Bid", b =>
                {
                    b.HasOne("EbayChat.Entities.User", "bidder")
                        .WithMany("Bids")
                        .HasForeignKey("bidderId")
                        .HasConstraintName("FK__Bid__bidderId__5629CD9C");

                    b.HasOne("EbayChat.Entities.Product", "product")
                        .WithMany("Bids")
                        .HasForeignKey("productId")
                        .HasConstraintName("FK__Bid__productId__5535A963");

                    b.Navigation("bidder");

                    b.Navigation("product");
                });

            modelBuilder.Entity("EbayChat.Entities.Coupon", b =>
                {
                    b.HasOne("EbayChat.Entities.Product", "product")
                        .WithMany("Coupons")
                        .HasForeignKey("productId")
                        .HasConstraintName("FK__Coupon__productI__60A75C0F");

                    b.Navigation("product");
                });

            modelBuilder.Entity("EbayChat.Entities.Dispute", b =>
                {
                    b.HasOne("EbayChat.Entities.OrderTable", "order")
                        .WithMany("Disputes")
                        .HasForeignKey("orderId")
                        .HasConstraintName("FK__Dispute__orderId__693CA210");

                    b.HasOne("EbayChat.Entities.User", "raisedByNavigation")
                        .WithMany("Disputes")
                        .HasForeignKey("raisedBy")
                        .HasConstraintName("FK__Dispute__raisedB__6A30C649");

                    b.Navigation("order");

                    b.Navigation("raisedByNavigation");
                });

            modelBuilder.Entity("EbayChat.Entities.Feedback", b =>
                {
                    b.HasOne("EbayChat.Entities.User", "seller")
                        .WithMany("Feedbacks")
                        .HasForeignKey("sellerId")
                        .HasConstraintName("FK__Feedback__seller__66603565");

                    b.Navigation("seller");
                });

            modelBuilder.Entity("EbayChat.Entities.Inventory", b =>
                {
                    b.HasOne("EbayChat.Entities.Product", "product")
                        .WithMany("Inventories")
                        .HasForeignKey("productId")
                        .HasConstraintName("FK__Inventory__produ__6383C8BA");

                    b.Navigation("product");
                });

            modelBuilder.Entity("EbayChat.Entities.Message", b =>
                {
                    b.HasOne("EbayChat.Entities.User", "receiver")
                        .WithMany("Messagereceivers")
                        .HasForeignKey("receiverId")
                        .HasConstraintName("FK__Message__receive__5DCAEF64");

                    b.HasOne("EbayChat.Entities.User", "sender")
                        .WithMany("Messagesenders")
                        .HasForeignKey("senderId")
                        .HasConstraintName("FK__Message__senderI__5CD6CB2B");

                    b.Navigation("receiver");

                    b.Navigation("sender");
                });

            modelBuilder.Entity("EbayChat.Entities.OrderItem", b =>
                {
                    b.HasOne("EbayChat.Entities.OrderTable", "order")
                        .WithMany("OrderItems")
                        .HasForeignKey("orderId")
                        .HasConstraintName("FK__OrderItem__order__46E78A0C");

                    b.HasOne("EbayChat.Entities.Product", "product")
                        .WithMany("OrderItems")
                        .HasForeignKey("productId")
                        .HasConstraintName("FK__OrderItem__produ__47DBAE45");

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("EbayChat.Entities.OrderTable", b =>
                {
                    b.HasOne("EbayChat.Entities.Address", "address")
                        .WithMany("OrderTables")
                        .HasForeignKey("addressId")
                        .HasConstraintName("FK__OrderTabl__addre__440B1D61");

                    b.HasOne("EbayChat.Entities.User", "buyer")
                        .WithMany("OrderTables")
                        .HasForeignKey("buyerId")
                        .HasConstraintName("FK__OrderTabl__buyer__4316F928");

                    b.Navigation("address");

                    b.Navigation("buyer");
                });

            modelBuilder.Entity("EbayChat.Entities.Payment", b =>
                {
                    b.HasOne("EbayChat.Entities.OrderTable", "order")
                        .WithMany("Payments")
                        .HasForeignKey("orderId")
                        .HasConstraintName("FK__Payment__orderId__4AB81AF0");

                    b.HasOne("EbayChat.Entities.User", "user")
                        .WithMany("Payments")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK__Payment__userId__4BAC3F29");

                    b.Navigation("order");

                    b.Navigation("user");
                });

            modelBuilder.Entity("EbayChat.Entities.Product", b =>
                {
                    b.HasOne("EbayChat.Entities.Category", "category")
                        .WithMany("Products")
                        .HasForeignKey("categoryId")
                        .HasConstraintName("FK__Product__categor__3F466844");

                    b.HasOne("EbayChat.Entities.User", "seller")
                        .WithMany("Products")
                        .HasForeignKey("sellerId")
                        .HasConstraintName("FK__Product__sellerI__403A8C7D");

                    b.Navigation("category");

                    b.Navigation("seller");
                });

            modelBuilder.Entity("EbayChat.Entities.ReturnRequest", b =>
                {
                    b.HasOne("EbayChat.Entities.OrderTable", "order")
                        .WithMany("ReturnRequests")
                        .HasForeignKey("orderId")
                        .HasConstraintName("FK__ReturnReq__order__5165187F");

                    b.HasOne("EbayChat.Entities.User", "user")
                        .WithMany("ReturnRequests")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK__ReturnReq__userI__52593CB8");

                    b.Navigation("order");

                    b.Navigation("user");
                });

            modelBuilder.Entity("EbayChat.Entities.Review", b =>
                {
                    b.HasOne("EbayChat.Entities.Product", "product")
                        .WithMany("Reviews")
                        .HasForeignKey("productId")
                        .HasConstraintName("FK__Review__productI__59063A47");

                    b.HasOne("EbayChat.Entities.User", "reviewer")
                        .WithMany("Reviews")
                        .HasForeignKey("reviewerId")
                        .HasConstraintName("FK__Review__reviewer__59FA5E80");

                    b.Navigation("product");

                    b.Navigation("reviewer");
                });

            modelBuilder.Entity("EbayChat.Entities.ShippingInfo", b =>
                {
                    b.HasOne("EbayChat.Entities.OrderTable", "order")
                        .WithMany("ShippingInfos")
                        .HasForeignKey("orderId")
                        .HasConstraintName("FK__ShippingI__order__4E88ABD4");

                    b.Navigation("order");
                });

            modelBuilder.Entity("EbayChat.Entities.Store", b =>
                {
                    b.HasOne("EbayChat.Entities.User", "seller")
                        .WithMany("Stores")
                        .HasForeignKey("sellerId")
                        .HasConstraintName("FK__Store__sellerId__6D0D32F4");

                    b.Navigation("seller");
                });

            modelBuilder.Entity("EbayChat.Entities.Address", b =>
                {
                    b.Navigation("OrderTables");
                });

            modelBuilder.Entity("EbayChat.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EbayChat.Entities.OrderTable", b =>
                {
                    b.Navigation("Disputes");

                    b.Navigation("OrderItems");

                    b.Navigation("Payments");

                    b.Navigation("ReturnRequests");

                    b.Navigation("ShippingInfos");
                });

            modelBuilder.Entity("EbayChat.Entities.Product", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Coupons");

                    b.Navigation("Inventories");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("EbayChat.Entities.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Bids");

                    b.Navigation("Disputes");

                    b.Navigation("Feedbacks");

                    b.Navigation("Messagereceivers");

                    b.Navigation("Messagesenders");

                    b.Navigation("OrderTables");

                    b.Navigation("Payments");

                    b.Navigation("Products");

                    b.Navigation("ReturnRequests");

                    b.Navigation("Reviews");

                    b.Navigation("Stores");
                });
#pragma warning restore 612, 618
        }
    }
}
